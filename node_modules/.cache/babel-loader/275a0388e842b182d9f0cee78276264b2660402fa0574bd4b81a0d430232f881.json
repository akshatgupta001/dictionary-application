{"ast":null,"code":"var _jsxFileName = \"/Users/akshatgupta/web/corpo-lingo/src/components/WordList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchWords } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WordList() {\n  _s();\n  const [words, setWords] = useState([]);\n  const [error, setError] = useState(null); // State to handle errors\n\n  useEffect(() => {\n    const getWords = async () => {\n      const result = await fetchWords();\n      if (result.error) {\n        setError(result.message);\n      } else {\n        setWords(result.data);\n        setError(null);\n      }\n    };\n    getWords();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Word List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: words.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No words available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this) : words.map(word => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/word/${word.word}`,\n          children: word.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)\n      }, word.word, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/add-word\",\n      children: \"Add a New Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(WordList, \"w6F9vAwwL4jx389WpfF3DEf8Yb0=\");\n_c = WordList;\nexport default WordList;\nvar _c;\n$RefreshReg$(_c, \"WordList\");","map":{"version":3,"names":["React","useState","useEffect","Link","fetchWords","jsxDEV","_jsxDEV","WordList","_s","words","setWords","error","setError","getWords","result","message","data","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","word","to","_c","$RefreshReg$"],"sources":["/Users/akshatgupta/web/corpo-lingo/src/components/WordList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchWords } from '../services/api';\n\nfunction WordList() {\n  const [words, setWords] = useState([]);\n  const [error, setError] = useState(null); // State to handle errors\n\n  useEffect(() => {\n    const getWords = async () => {\n      const result = await fetchWords();\n      if (result.error) {\n        setError(result.message);\n      } else {\n        setWords(result.data);\n        setError(null);\n      }\n    };\n    getWords();\n  }, []);\n\n  return (\n    <div>\n      <h2>Word List</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>} {/* Display error message */}\n      <ul>\n        {words.length === 0 ? (\n          <p>No words available.</p>\n        ) : (\n          words.map((word) => (\n            <li key={word.word}>\n              <Link to={`/word/${word.word}`}>{word.word}</Link>\n            </li>\n          ))\n        )}\n      </ul>\n      <Link to=\"/add-word\">Add a New Word</Link>\n    </div>\n  );\n}\n\nexport default WordList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMW,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,MAAM,GAAG,MAAMV,UAAU,CAAC,CAAC;MACjC,IAAIU,MAAM,CAACH,KAAK,EAAE;QAChBC,QAAQ,CAACE,MAAM,CAACC,OAAO,CAAC;MAC1B,CAAC,MAAM;QACLL,QAAQ,CAACI,MAAM,CAACE,IAAI,CAAC;QACrBJ,QAAQ,CAAC,IAAI,CAAC;MAChB;IACF,CAAC;IACDC,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBV,KAAK,iBAAIL,OAAA;MAAGgB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC,eACnDf,OAAA;MAAAW,QAAA,EACGR,KAAK,CAACe,MAAM,KAAK,CAAC,gBACjBlB,OAAA;QAAAW,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAE1BZ,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACbpB,OAAA;QAAAW,QAAA,eACEX,OAAA,CAACH,IAAI;UAACwB,EAAE,EAAE,SAASD,IAAI,CAACA,IAAI,EAAG;UAAAT,QAAA,EAAES,IAAI,CAACA;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAD3CK,IAAI,CAACA,IAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACL;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACLf,OAAA,CAACH,IAAI;MAACwB,EAAE,EAAC,WAAW;MAAAV,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACb,EAAA,CAnCQD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAqCjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}