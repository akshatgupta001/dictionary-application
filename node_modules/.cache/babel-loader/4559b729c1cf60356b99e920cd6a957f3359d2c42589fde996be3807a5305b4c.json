{"ast":null,"code":"var _jsxFileName = \"/Users/akshatgupta/web/corpo-lingo/src/components/WordDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchWordDetails, updateWord, fetchTags } from '../services/api';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WordDetails() {\n  _s();\n  const {\n    word\n  } = useParams();\n  const [wordData, setWordData] = useState(null);\n  const [tags, setTags] = useState([]);\n  const [availableTags, setAvailableTags] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const wordResponse = await fetchWordDetails(word);\n        console.log('Word Response:', wordResponse.data); // Log the word response\n\n        if (wordResponse.data && typeof wordResponse.data === 'object') {\n          setWordData(wordResponse.data);\n          setTags(wordResponse.data.tags || []); // Set tags from fetched data\n        } else {\n          throw new Error('Invalid word data format');\n        }\n      } catch (err) {\n        setError(err.message || 'Failed to fetch word details or tags');\n        console.error('Error fetching data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [word]);\n  const handleTagChange = e => {\n    setTags(Array.from(e.target.selectedOptions, option => option.value));\n  };\n  const handleUpdate = async () => {\n    try {\n      await updateWord(word, {\n        tags\n      });\n      alert('Tags updated successfully!');\n    } catch (err) {\n      alert('Failed to update tags: ' + (err.message || 'Unknown error'));\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: wordData.word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Full Form:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this), \" \", wordData.fullForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 10\n      }, this), \" \", wordData.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Edit Tags:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        multiple: true,\n        value: tags,\n        onChange: handleTagChange,\n        children: availableTags.map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tag.name,\n          children: tag.name\n        }, tag.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"Update Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(WordDetails, \"STOEg7p1KIEQKbpv6BoCmIv6hhM=\", false, function () {\n  return [useParams];\n});\n_c = WordDetails;\nexport default WordDetails;\nvar _c;\n$RefreshReg$(_c, \"WordDetails\");","map":{"version":3,"names":["React","useState","useEffect","fetchWordDetails","updateWord","fetchTags","useParams","jsxDEV","_jsxDEV","WordDetails","_s","word","wordData","setWordData","tags","setTags","availableTags","setAvailableTags","loading","setLoading","error","setError","fetchData","wordResponse","console","log","data","Error","err","message","handleTagChange","e","Array","from","target","selectedOptions","option","value","handleUpdate","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fullForm","description","multiple","onChange","map","tag","name","onClick","_c","$RefreshReg$"],"sources":["/Users/akshatgupta/web/corpo-lingo/src/components/WordDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchWordDetails, updateWord, fetchTags } from '../services/api';\nimport { useParams } from 'react-router-dom';\n\nfunction WordDetails() {\n  const { word } = useParams();\n  const [wordData, setWordData] = useState(null);\n  const [tags, setTags] = useState([]);\n  const [availableTags, setAvailableTags] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const wordResponse = await fetchWordDetails(word);\n\n        console.log('Word Response:', wordResponse.data); // Log the word response\n\n        if (wordResponse.data && typeof wordResponse.data === 'object') {\n          setWordData(wordResponse.data);\n          setTags(wordResponse.data.tags || []); // Set tags from fetched data\n        } else {\n          throw new Error('Invalid word data format');\n        }\n\n      \n      } catch (err) {\n        setError(err.message || 'Failed to fetch word details or tags');\n        console.error('Error fetching data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [word]);\n\n  const handleTagChange = (e) => {\n    setTags(Array.from(e.target.selectedOptions, option => option.value));\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await updateWord(word, { tags });\n      alert('Tags updated successfully!');\n    } catch (err) {\n      alert('Failed to update tags: ' + (err.message || 'Unknown error'));\n    }\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p style={{ color: 'red' }}>{error}</p>;\n\n  return (\n    <div>\n      <h2>{wordData.word}</h2>\n      <p><strong>Full Form:</strong> {wordData.fullForm}</p>\n      <p><strong>Description:</strong> {wordData.description}</p>\n      <div>\n        <label>Edit Tags:</label>\n        <select multiple value={tags} onChange={handleTagChange}>\n          {availableTags.map((tag) => (\n            <option key={tag.name} value={tag.name}>{tag.name}</option>\n          ))}\n        </select>\n        <button onClick={handleUpdate}>Update Tags</button>\n      </div>\n    </div>\n  );\n}\n\nexport default WordDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}