{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'https://c9f7b82a-b412-4ec3-ac6d-a18f0709a49d.mock.pstmn.io'; // Replace with actual backend URL\n\n// Function to handle errors\nconst handleError = error => {\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    console.error('Error Response:', error.response.data);\n    console.error('Status Code:', error.response.status);\n    console.error('Headers:', error.response.headers);\n    return {\n      message: 'An error occurred while fetching data.',\n      status: error.response.status\n    };\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.error('Error Request:', error.request);\n    return {\n      message: 'No response received from the server. Please try again later.'\n    };\n  } else {\n    // Something happened in setting up the request\n    console.error('Error Message:', error.message);\n    return {\n      message: 'An unexpected error occurred.'\n    };\n  }\n};\n\n// Fetch all words\nexport const fetchWords = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/words`);\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n// Fetch details of a word\nexport const fetchWordDetails = async word => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/words/${word}`);\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n// Add a new word\nexport const addWord = async wordData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/words`, wordData);\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n// Update a word's tags or description\nexport const updateWord = async (word, updatedData) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/words/${word}`, updatedData);\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n// Fetch top N searched words\nexport const fetchTopSearches = async n => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/words/top/${n}`);\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n// Search words by tags\nexport const searchWordsByTags = async tags => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/words/search`, {\n      params: {\n        tags\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n// Fetch all tags\nexport const fetchTags = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/tags`);\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","handleError","error","response","console","data","status","headers","message","request","fetchWords","get","fetchWordDetails","word","addWord","wordData","post","updateWord","updatedData","put","fetchTopSearches","n","searchWordsByTags","tags","params","fetchTags"],"sources":["/Users/akshatgupta/web/corpo-lingo/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'https://c9f7b82a-b412-4ec3-ac6d-a18f0709a49d.mock.pstmn.io'; // Replace with actual backend URL\n\n// Function to handle errors\nconst handleError = (error) => {\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    console.error('Error Response:', error.response.data);\n    console.error('Status Code:', error.response.status);\n    console.error('Headers:', error.response.headers);\n    return { message: 'An error occurred while fetching data.', status: error.response.status };\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.error('Error Request:', error.request);\n    return { message: 'No response received from the server. Please try again later.' };\n  } else {\n    // Something happened in setting up the request\n    console.error('Error Message:', error.message);\n    return { message: 'An unexpected error occurred.' };\n  }\n};\n\n// Fetch all words\nexport const fetchWords = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/words`);\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n// Fetch details of a word\nexport const fetchWordDetails = async (word) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/words/${word}`);\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n// Add a new word\nexport const addWord = async (wordData) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/words`, wordData);\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n// Update a word's tags or description\nexport const updateWord = async (word, updatedData) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/words/${word}`, updatedData);\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n// Fetch top N searched words\nexport const fetchTopSearches = async (n) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/words/top/${n}`);\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n// Search words by tags\nexport const searchWordsByTags = async (tags) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/words/search`, { params: { tags } });\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n// Fetch all tags\nexport const fetchTags = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/tags`);\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}