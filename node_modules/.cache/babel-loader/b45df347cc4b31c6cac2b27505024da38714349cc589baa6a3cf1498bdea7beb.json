{"ast":null,"code":"var _jsxFileName = \"/Users/akshatgupta/web/corpo-lingo/src/components/TopSearches.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchTopSearches } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopSearches() {\n  _s();\n  const [topWords, setTopWords] = useState([]);\n  const [n, setN] = useState(10); // Default to top 10 searches\n  const [error, setError] = useState(null); // State to handle errors\n\n  useEffect(() => {\n    const getTopSearches = async () => {\n      try {\n        const response = await fetchTopSearches(n);\n        if (Array.isArray(response)) {\n          setTopWords(response); // Ensure response is an array\n          setError(null); // Reset error on successful fetch\n        } else {\n          throw new Error('Invalid data format');\n        }\n      } catch (err) {\n        setError(err.message || 'Failed to fetch top searches'); // Handle fetch error\n        console.error('Error fetching top searches:', err);\n      }\n    };\n    getTopSearches();\n  }, [n]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Top \", n, \" Searched Words\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numTopWords\",\n        children: \"Number of Top Words to Display:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"numTopWords\",\n        value: n,\n        onChange: e => setN(Math.min(Math.max(1, Number(e.target.value)), 50)) // Clamp value between 1 and 50\n        ,\n        min: \"1\",\n        max: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: topWords.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No top searches available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this) : topWords.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: item.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), \": \", item.searchCount, \" searches\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(TopSearches, \"9PeJrfl2OyNCAFQn6RTeNMhx2Yk=\");\n_c = TopSearches;\nexport default TopSearches;\nvar _c;\n$RefreshReg$(_c, \"TopSearches\");","map":{"version":3,"names":["React","useState","useEffect","fetchTopSearches","jsxDEV","_jsxDEV","TopSearches","_s","topWords","setTopWords","n","setN","error","setError","getTopSearches","response","Array","isArray","Error","err","message","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","htmlFor","type","id","value","onChange","e","Math","min","max","Number","target","length","map","item","index","word","searchCount","_c","$RefreshReg$"],"sources":["/Users/akshatgupta/web/corpo-lingo/src/components/TopSearches.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchTopSearches } from '../services/api';\n\nfunction TopSearches() {\n  const [topWords, setTopWords] = useState([]);\n  const [n, setN] = useState(10); // Default to top 10 searches\n  const [error, setError] = useState(null); // State to handle errors\n\n  useEffect(() => {\n    const getTopSearches = async () => {\n      try {\n        const response = await fetchTopSearches(n);\n        if (Array.isArray(response)) {\n          setTopWords(response); // Ensure response is an array\n          setError(null); // Reset error on successful fetch\n        } else {\n          throw new Error('Invalid data format');\n        }\n      } catch (err) {\n        setError(err.message || 'Failed to fetch top searches'); // Handle fetch error\n        console.error('Error fetching top searches:', err);\n      }\n    };\n\n    getTopSearches();\n  }, [n]);\n\n  return (\n    <div>\n      <h2>Top {n} Searched Words</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>} {/* Display error message */}\n      <div>\n        <label htmlFor=\"numTopWords\">Number of Top Words to Display:</label>\n        <input\n          type=\"number\"\n          id=\"numTopWords\"\n          value={n}\n          onChange={(e) => setN(Math.min(Math.max(1, Number(e.target.value)), 50))} // Clamp value between 1 and 50\n          min=\"1\"\n          max=\"50\"\n        />\n      </div>\n      <ul>\n        {topWords.length === 0 ? (\n          <p>No top searches available.</p>\n        ) : (\n          topWords.map((item, index) => (\n            <li key={index}>\n              <strong>{item.word}</strong>: {item.searchCount} searches\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default TopSearches;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}