{"ast":null,"code":"var _jsxFileName = \"/Users/akshatgupta/web/corpo-lingo/src/components/WordList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchWords } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WordList() {\n  _s();\n  const [words, setWords] = useState([]);\n  useEffect(() => {\n    fetchWords().then(response => setWords(response.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Word List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: words.map(word => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/word/${word.word}`,\n          children: word.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, word.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/add-word\",\n      children: \"Add a New Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(WordList, \"QrHlQthZFfwcsWWYyDJIvsds8f8=\");\n_c = WordList;\nexport default WordList;\nvar _c;\n$RefreshReg$(_c, \"WordList\");","map":{"version":3,"names":["React","useState","useEffect","Link","fetchWords","jsxDEV","_jsxDEV","WordList","_s","words","setWords","then","response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","word","to","id","_c","$RefreshReg$"],"sources":["/Users/akshatgupta/web/corpo-lingo/src/components/WordList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchWords } from '../services/api';\n\nfunction WordList() {\n  const [words, setWords] = useState([]);\n\n  useEffect(() => {\n    fetchWords().then(response => setWords(response.data));\n  }, []);\n\n  return (\n    <div>\n      <h2>Word List</h2>\n      <ul>\n        {words.map((word) => (\n          <li key={word.id}>\n            <Link to={`/word/${word.word}`}>{word.word}</Link>\n          </li>\n        ))}\n      </ul>\n      <Link to=\"/add-word\">Add a New Word</Link>\n    </div>\n  );\n}\n\nexport default WordList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdE,UAAU,CAAC,CAAC,CAACO,IAAI,CAACC,QAAQ,IAAIF,QAAQ,CAACE,QAAQ,CAACC,IAAI,CAAC,CAAC;EACxD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBZ,OAAA;MAAAQ,QAAA,EACGL,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACdd,OAAA;QAAAQ,QAAA,eACER,OAAA,CAACH,IAAI;UAACkB,EAAE,EAAE,SAASD,IAAI,CAACA,IAAI,EAAG;UAAAN,QAAA,EAAEM,IAAI,CAACA;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAD3CE,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLZ,OAAA,CAACH,IAAI;MAACkB,EAAE,EAAC,WAAW;MAAAP,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACV,EAAA,CApBQD,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AAsBjB,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}