{"ast":null,"code":"var _jsxFileName = \"/Users/akshatgupta/web/corpo-lingo/src/components/TopSearches.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchTopSearches } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopSearches() {\n  _s();\n  const [topWords, setTopWords] = useState([]);\n  const [n, setN] = useState(10); // Default to top 10 searches\n\n  useEffect(() => {\n    // Fetch top N searched words\n    fetchTopSearches(n).then(response => setTopWords(response.data)).catch(error => console.error('Error fetching top searches:', error));\n  }, [n]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Top \", n, \" Searched Words\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numTopWords\",\n        children: \"Number of Top Words to Display:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"numTopWords\",\n        value: n,\n        onChange: e => setN(Number(e.target.value)),\n        min: \"1\",\n        max: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: topWords.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No top searches available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : topWords.map((word, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: word.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), \": \", word.description]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(TopSearches, \"hDcB2Pghy4aPC7gv4jo010C0Md4=\");\n_c = TopSearches;\nexport default TopSearches;\nvar _c;\n$RefreshReg$(_c, \"TopSearches\");","map":{"version":3,"names":["React","useState","useEffect","fetchTopSearches","jsxDEV","_jsxDEV","TopSearches","_s","topWords","setTopWords","n","setN","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","Number","target","min","max","length","map","word","index","description","_c","$RefreshReg$"],"sources":["/Users/akshatgupta/web/corpo-lingo/src/components/TopSearches.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchTopSearches } from '../services/api';\n\nfunction TopSearches() {\n  const [topWords, setTopWords] = useState([]);\n  const [n, setN] = useState(10); // Default to top 10 searches\n\n  useEffect(() => {\n    // Fetch top N searched words\n    fetchTopSearches(n)\n      .then(response => setTopWords(response.data))\n      .catch(error => console.error('Error fetching top searches:', error));\n  }, [n]);\n\n  return (\n    <div>\n      <h2>Top {n} Searched Words</h2>\n      <div>\n        <label htmlFor=\"numTopWords\">Number of Top Words to Display:</label>\n        <input\n          type=\"number\"\n          id=\"numTopWords\"\n          value={n}\n          onChange={(e) => setN(Number(e.target.value))}\n          min=\"1\"\n          max=\"50\"\n        />\n      </div>\n      <ul>\n        {topWords.length === 0 ? (\n          <p>No top searches available.</p>\n        ) : (\n          topWords.map((word, index) => (\n            <li key={index}>\n              <strong>{word.word}</strong>: {word.description}\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default TopSearches;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,CAAC,EAAEC,IAAI,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEhCC,SAAS,CAAC,MAAM;IACd;IACAC,gBAAgB,CAACO,CAAC,CAAC,CAChBE,IAAI,CAACC,QAAQ,IAAIJ,WAAW,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC5CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,CAACN,CAAC,CAAC,CAAC;EAEP,oBACEL,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,GAAI,MAAI,EAACR,CAAC,EAAC,iBAAe;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BjB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAOkB,OAAO,EAAC,aAAa;QAAAL,QAAA,EAAC;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpEjB,OAAA;QACEmB,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC,aAAa;QAChBC,KAAK,EAAEhB,CAAE;QACTiB,QAAQ,EAAGC,CAAC,IAAKjB,IAAI,CAACkB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;QAC9CK,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC;MAAI;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNjB,OAAA;MAAAa,QAAA,EACGV,QAAQ,CAACyB,MAAM,KAAK,CAAC,gBACpB5B,OAAA;QAAAa,QAAA,EAAG;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEjCd,QAAQ,CAAC0B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvB/B,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAASiB,IAAI,CAACA;QAAI;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACa,IAAI,CAACE,WAAW;MAAA,GADxCD,KAAK;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACf,EAAA,CAtCQD,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAwCpB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}